-- Initial shared.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                pure-txt-trie
version:             0.1.0.0
-- synopsis:            
-- description:         
license:             OtherLicense
license-file:        LICENSE
author:              Sean Mackenzie
maintainer:          sean@grump.ly
-- copyright:           
category:            Web
build-type:          Simple
cabal-version:       >=1.10

library
  exposed-modules:     Pure.Data.Txt.Trie
  default-extensions:
    AutoDeriveTypeable
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DoAndIfThenElse
    EmptyDataDecls
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    ImplicitParams
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    OverloadedStrings
    PartialTypeSignatures
    PatternGuards
    PatternSynonyms
    PolyKinds
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeFamilies
    TypeOperators
    TypeSynonymInstances
    ViewPatterns 
  build-depends:       base >=4.9 && <4.11, 
                       pure,
                       containers,
                       deepseq
  hs-source-dirs:      src
  default-language:    Haskell2010

benchmark pure-txt-trie-bench
  type: exitcode-stdio-1.0

  main-is: Bench.hs

  hs-source-dirs: bench

  ghc-options: -O2 -rtsopts -with-rtsopts=-T -v0

  build-depends:
      base >=4.8,
      trivial,
      pure,
      containers,
      pure-txt-trie

  default-extensions:
    AutoDeriveTypeable
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DoAndIfThenElse
    EmptyDataDecls
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    OverloadedStrings
    PartialTypeSignatures
    PatternGuards
    PolyKinds
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeFamilies
    TypeOperators
    TypeSynonymInstances
    ViewPatterns 

  default-language: Haskell2010

test-suite pure-txt-trie-test
  type: exitcode-stdio-1.0

  main-is: Test.hs

  hs-source-dirs: test

  build-depends:
      base >=4.8,
      trivial,
      pure,
      pure-txt-trie

  default-extensions:
    AutoDeriveTypeable
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DoAndIfThenElse
    EmptyDataDecls
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    OverloadedStrings
    PartialTypeSignatures
    PatternGuards
    PolyKinds
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeFamilies
    TypeOperators
    TypeSynonymInstances
    ViewPatterns 

  default-language: Haskell2010

